name: Add Tags to S3 Bucket

on:
  workflow_dispatch:
    inputs:
      tags: # json object
        required: true
        type: string
      port_context:
        required: true
        type: string

jobs:
  tag-s3-bucket:
    runs-on: ubuntu-latest
    steps:
    - name: Inform starting of action
      uses: port-labs/port-github-action@v1
      with:
        clientId: ${{ secrets.PORT_CLIENT_ID }}
        clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
        operation: PATCH_RUN
        runId: ${{ fromJson(inputs.port_context).runId }}
        logMessage: |
          Starting a GitHub worklfow to tag the Azure resource: ${{fromJson(inputs.port_context).entity.identifier}} ... ⛴️

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: always()
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Add Tags to S3 Bucket
      env:
        BUCKET_NAME: ${{ fromJson(inputs.port_context).entity.identifier }}
        TAGS_JSON: ${{ github.event.inputs.tags }}
      run: |
        # Extract key-value pairs from the JSON object
        # {
        #   "env": "test",
        #   "team": "beta"
        # }

        TAGS=$(echo "${TAGS_JSON}" | jq -r 'to_entries | map("\(.key)=\(.value)") | join(" ")')

        aws s3api put-bucket-tagging \
          --bucket ${BUCKET_NAME} \
          --tagging "TagSet=${TAGS}"

    - name: Create a log message
      uses: port-labs/port-github-action@v1
      with:
        clientId: ${{ secrets.PORT_CLIENT_ID }}
        clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
        baseUrl: https://api.getport.io
        operation: PATCH_RUN
        runId: ${{fromJson(inputs.port_context).runId}}
        logMessage: Added tags to ${{fromJson(inputs.port_context).entity.identifier}}
