name: Create New S3 Bucket Crossplane Manifest

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: "Name of the s3 bucket"
        required: true
      aws_region:
        description: "AWS Region for the cluster"
        required: true
      port_payload:
        required: true
        description: >-
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
env:
  auto_merge: ${{ fromJson(inputs.port_payload).payload.properties.auto_merge_pr }}
jobs:
  create-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Inform execution of request to create a new manifest
        id: promote
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: "About to create a crossplane manifest for a new s3 bucket..."

      - uses: actions/checkout@v4

      - name: Create the manifest file
        id: make-changes
        env:
          BUCKET_FILE_PATH: "manifests/s3bucket"
          CROSSPLANE_TEMPLATE_PATH: "crossplane-templates/s3bucket-crossplane.yaml"
        run: |
          mkdir -p $BUCKET_FILE_PATH
          BUCKET_FILE_NAME="${{ env.BUCKET_FILE_PATH }}/s3bucket-${{ fromJson(inputs.bucket_name) }}.yaml"

          cp $CROSSPLANE_TEMPLATE_PATH $BUCKET_FILE_NAME

          sed -i "s/{{ bucket_name }}/${{ fromJson(inputs.bucket_name) }}/g" $BUCKET_FILE_NAME
          sed -i "s/{{ aws_region }}/${{ fromJson(inputs.aws_region) }}/g" $BUCKET_FILE_NAME

          git add $BUCKET_FILE_NAME


      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.CREATOR_TOKEN }}
          commit-message: Added ${{ fromJson(inputs.bucket_name) }} s3 bucket crossplane manifest
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: deployment/${{ fromJson(inputs.port_payload).context.runId }}
          title: "[Deployment] Add ${{ fromJson(inputs.bucket_name) }} s3 bucket crossplane manifest"
          body: |
            This PR is automatically generated by Port.
            It contains the crossplane manifest for the s3 bucket ${{ fromJson(inputs.bucket_name) }}.

            The manifest is generated based on the blueprint: ${{ fromJson(inputs.port_payload).context.blueprint }}.

            The run id is: ${{ fromJson(inputs.port_payload).context.runId }}.
            The run was triggered by: ${{ fromJson(inputs.port_payload).trigger.by.user.email }}.
            The run was triggered at: ${{ fromJson(inputs.port_payload).trigger.at }}.
            The run was triggered from: ${{ fromJson(inputs.port_payload).trigger.from }}.


            - Auto-generated by [port-actions][1] 

            [1]: https://app.getport.io/organization/run?runId=${{ fromJson(inputs.port_payload).context.runId }}
          labels: |
            deployment
            automated pr
          assignees: ${{ fromJson(inputs.port_payload).trigger.by.user.email }}

      - name: Inform Port about pull request creation status - Success
        if: steps.create-pr.outputs.pull-request-url != ''
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Pull request created successfully. You can view the pull request [here](${{ steps.create-pr.outputs.pull-request-url }}).

      - name: Merge Pull Request
        if: ${{ env.auto_merge == 'true' && steps.create-pr.outcome == 'success' }}
        env:
          GH_TOKEN: ${{ secrets.CREATOR_TOKEN }}
          PR_URL: ${{ steps.create-pr.outputs.pull-request-number }}
          pr_number: ${{ steps.create-pr.outputs.pull-request-number }}
        run: |
          echo "Merging pull request.. $PR_URL"

          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number/merge")

          echo "HTTP Status: $HTTP_STATUS"

          if [ $HTTP_STATUS -eq 200 ]; then
            echo "Pull request merged successfully."
            echo "merge_status=successful" >> $GITHUB_ENV
          else
            echo "Failed to merge PR. HTTP Status: $HTTP_STATUS"
            echo "merge_status=unsuccessful" >> $GITHUB_ENV
          fi

      - name: Inform completion of pull request merge
        if: ${{ env.auto_merge == 'true' }}
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{fromJson(github.event.inputs.port_payload).context.runId}}
          logMessage: |
            Pull request merged successfully.

      - name: Inform Port about pull request creation status - Failure
        if: steps.create-pr.outputs.pull-request-url == ''
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
            Failed to create pull request. Please check the logs for more details.
