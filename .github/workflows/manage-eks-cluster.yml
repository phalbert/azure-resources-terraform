name: Manage EKS Cluster
on:
  workflow_dispatch:
    # Define inputs that are required for the manual trigger
    inputs:
      clusterName:
        description: 'Name of the EKS cluster'
        required: true
      region:
        description: 'AWS Region for the cluster'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
        default: 'apply'
      port_payload:
        required: true
        description:
            Port's payload, including details for who triggered the action and
            general context (blueprint, run id, etc...)
        type: string


jobs:
  apply_cluster:
    runs-on: ubuntu-latest
    # Only run this job if the action input is "apply"
    defaults:
      run:
        shell: bash
        # We keep Terraform files in the terraform directory.
        working-directory: ./terraform
        
    if: ${{ github.event.inputs.action == 'apply' }}
    steps: 
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create a log message
      uses: port-labs/port-github-action@v1
      with:
        clientId: ${{ secrets.PORT_CLIENT_ID }}
        clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
        baseUrl: https://api.getport.io
        operation: PATCH_RUN
        runId: ${{fromJson(inputs.port_payload).context.runId}}
        logMessage: Creating EKS cluster to ${{ fromJson(inputs.cluster_name) }}
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}  # GitHub secret for Terraform Cloud API token
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Format
      run: terraform fmt
      
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Apply
      run: terraform apply -var cluster_name=${{ github.event.inputs.cluster_name }} -var region=${{ github.event.inputs.region }} -auto-approve

  destroy_cluster:
    runs-on: ubuntu-latest
    
    # Only run this job if the action input is "destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform FMT
      run: terraform fmt
      
    - name: Terraform Validate
      run: terraform validate
      
    - name: Terraform Destroy
      run: terraform destroy -var cluster_name=${{ github.event.inputs.cluster_name }} -var region=${{ github.event.inputs.region }} -auto-approve
